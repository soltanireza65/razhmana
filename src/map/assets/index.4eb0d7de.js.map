{"version":3,"file":"index.4eb0d7de.js","sources":["../../vite/modulepreload-polyfill","../../main.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","let sourceLat=parseFloat( $('#map-detail').attr('data-source-lat'))\nlet sourceLong=parseFloat( $('#map-detail').attr('data-source-long'))\nlet destLat=parseFloat( $('#map-detail').attr('data-dest-lat'))\nlet destLong=parseFloat( $('#map-detail').attr('data-dest-long'))\nlet sourceIcon= $('#map-detail').attr('data-source-icon');\nlet destIcon= $('#map-detail').attr('data-dest-icon');\nlet zoom=parseInt( $('#map-detail').attr('data-zoom'));\nlet imgSize= parseInt($('#map-detail').attr('data-img-size'));\nlet roadColor= $('#map-detail').attr('data-road-color');\n// let destIcon= $('#map-detail').attr('data-dest-icon');\nvar tabriz = ol.proj.fromLonLat([sourceLat, sourceLong]);\nvar tehran = ol.proj.fromLonLat([destLat,destLong]);\n// let zoomm\n\nconsole.log(sourceLat, sourceLong, destLat,destLong)\n\nfunction getCenterPoint(lat1, lng1, lat2, lng2) {\n    const centerLat = (lat1 + lat2) / 2;\n    const centerLng = (lng1 + lng2) / 2;\n    return [centerLat, centerLng];\n}\n\nlet center = ol.proj.fromLonLat(getCenterPoint(sourceLat, sourceLong, destLat,destLong));\nconsole.log(center)\nvar map = new ol.Map({\n    target: 'map',\n    layers: [\n        new ol.layer.Tile({\n            source: new ol.source.OSM(),\n        }),\n    ],\n    view: new ol.View({\n        center: center,\n        zoom: zoom\n    })\n});\n\n// Add an icon at Tabriz\nvar tabrizIcon = new ol.Feature({\n    geometry: new ol.geom.Point(tabriz)\n});\nvar tabrizStyle = new ol.style.Style({\n    image: new ol.style.Icon({\n        anchor: [0.5, 1],\n        src: sourceIcon,\n        height:imgSize,\n        width:imgSize,\n    })\n});\ntabrizIcon.setStyle(tabrizStyle);\nvar vectorSource = new ol.source.Vector({\n    features: [tabrizIcon]\n});\nvar vectorLayer = new ol.layer.Vector({\n    source: vectorSource\n});\nmap.addLayer(vectorLayer);\n\n// Add an icon at Tehran\n\nvar tehranIcon = new ol.Feature({\n    geometry: new ol.geom.Point(tehran)\n});\nvar tehranStyle = new ol.style.Style({\n    image: new ol.style.Icon({\n        anchor: [0.5, 1],\n        src: destIcon,\n        height:imgSize,\n        width:imgSize,\n    })\n});\ntehranIcon.setStyle(tehranStyle);\nvectorSource.addFeature(tehranIcon);\n\n// Create a line between Tabriz and Tehran\nvar line = new ol.Feature({\n    geometry: new ol.geom.LineString([tabriz, tehran])\n});\nvar lineStyle = new ol.style.Style({\n    stroke: new ol.style.Stroke({\n        color: roadColor,\n        width: 10\n    })\n});\nline.setStyle(lineStyle);\nvectorSource.addFeature(line);\n\n/* get distance */\nfunction getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {\n    const R = 6371; // Radius of the earth in km\n    const dLat = deg2rad(lat2 - lat1);  // deg2rad below\n    const dLon = deg2rad(lon2 - lon1);\n    const a =\n        Math.sin(dLat/2) * Math.sin(dLat/2) +\n        Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *\n        Math.sin(dLon/2) * Math.sin(dLon/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    const d = R * c; // Distance in km\n    return d;\n}\n\nfunction deg2rad(deg) {\n    return deg * (Math.PI/180)\n}\nlet distance =parseInt(getDistanceFromLatLonInKm(sourceLat , sourceLong , destLat ,destLong).toString())\nconsole.log('distance' , distance)\n// Create a new Text feature\nvar textFeature = new ol.Feature({\n    geometry: new ol.geom.Point(center),\n    text: (distance) + ' KM'\n });\n\n// Create a new Text style\nvar textStyle = new ol.style.Style({\n    text: new ol.style.Text({\n        text: textFeature.get('text'),\n        font: '55px Arial',\n        fill: new ol.style.Fill({\n            color: '#fff',\n        }),\n        backgroundFill:new ol.style.Fill({\n            color: roadColor,\n        }),\n\n\n    })\n});\n// Add the Text feature to a layer\nvar textLayer = new ol.layer.Vector({\n    source: new ol.source.Vector({\n        features: [textFeature]\n    }),\n    style: textStyle\n});\n\n// Add the Text layer to the map\nmap.addLayer(textLayer);"],"names":["p","relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","sourceLat","sourceLong","destLat","destLong","sourceIcon","destIcon","zoom","imgSize","roadColor","tabriz","tehran","getCenterPoint","lat1","lng1","lat2","lng2","centerLat","centerLng","center","map","tabrizIcon","tabrizStyle","vectorSource","vectorLayer","tehranIcon","tehranStyle","line","lineStyle","getDistanceFromLatLonInKm","lon1","lon2","dLat","deg2rad","dLon","a","c","deg","distance","textFeature","textStyle","textLayer"],"mappings":"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"}